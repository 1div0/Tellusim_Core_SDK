# Optional environment variables:
#
#  * HTTPS      - 0, 1
#
# Optional command line arguments:
#
#  * debug  - 0, 1
#  * depend - 0, 1

TSROOT = @ROOT@

ARCH = arm64
DEPEND = .depend
ICON = tellusim.png
CXX = ccache clang++
BUILD = $(TSROOT)/bin/ts_ipa.sh

#
# Default configuration
#
CFLAGS += -std=c++11 -Wall -Wfloat-conversion -Os -ffast-math -fsigned-char -fvisibility=hidden
CFLAGS += -D_TVOS=1 -ObjC++ -fobjc-arc -I$(TSROOT)/include -I$(TSROOT)/plugins
CFLAGS += -Wno-return-std-move -Wno-undefined-var-template
LDFLAGS += -L$(TSROOT)/lib/tvos/$(ARCH)
LDFLAGS += -Wl,-e,_clay_main
LIBS += -framework Foundation
LIBS += -framework QuartzCore
LIBS += -framework GameController
LIBS += -framework UIKit
LIBS += -framework Metal

#
# Debugging
#
ifneq "$(debug)" "0"
	POSTFIX := $(POSTFIX)d
	CFLAGS += -g -DTS_DEBUG=1
else
	CFLAGS += -DNDEBUG=1
endif

LDFLAGS += -Wl,-all_load $(TSROOT)/lib/tvos/$(ARCH)/libTellusim_arm64$(POSTFIX).a

#
# Dependencies
#
ifneq "$(depend)" "0"
	DEPS = $(SRCS)
	ifeq "$(depend)" "1"
		CLEAN += $(DEPEND)
	endif
else
	DEPS =
endif

#
# Platform configuration
#
CFLAGS += -arch arm64
LDFLAGS += -arch arm64
CFLAGS += -mappletvos-version-min=16.0
LDFLAGS += -mappletvos-version-min=16.0

#
# Https
#
ifeq "$(HTTPS)" "1"
	BUILD += -https
endif

#
# System root
#
SYSROOT = $(shell xcrun --sdk appletvos --show-sdk-path)
CFLAGS += -isysroot$(SYSROOT)
LDFLAGS += -isysroot$(SYSROOT)

#
# Targets
#
TARGET = @TARGET@
IPA = @IPA@$(POSTFIX)

#
# Sources
#
SRCS = @SOURCES@
OBJS = $(SRCS:.cpp=.o)

#
# Assets
#
ASSETS = @ASSETS@

#
# Build target
#
all: $(TARGET)

.cpp.o:
	@echo `basename $<`
	@$(CXX) $(CFLAGS) $(FLAGS) -c -o $@ $<

$(DEPEND):
	@rm -f $@
	@echo "Depend `basename $(CURDIR)`"
	@$(foreach SRC, $(DEPS), $(CXX) $(CFLAGS) $(FLAGS) -MM -MT $(SRC:.cpp=.o) $(SRC) >> $@;)

$(TARGET): $(DEPEND) $(OBJS)
	@$(CXX) -o $@ $(LDFLAGS) $(OBJS) $(LIBS)
	@echo "Done `basename $(CURDIR)`"

ipa:
	@echo "Making $(IPA).ipa"
	@$(BUILD) "$(IPA)" $(ICON) $(ARCH) $(TARGET) $(ASSETS)

install:
	@echo "Installing $(IPA)"
	@$(BUILD) -install "$(IPA)" $(ICON) $(ARCH) $(TARGET) $(ASSETS)

run:
	@echo "Running $(IPA)"
	@$(BUILD) -run "$(IPA)" $(ICON) $(ARCH) $(TARGET) $(ASSETS)

debug:
	@echo "Debugging $(IPA)"
	@$(BUILD) -debug "$(IPA)" $(ICON) $(ARCH) $(TARGET) $(ASSETS)

remove:
	@echo "Removing $(IPA)"
	@-$(BUILD) -remove "$(IPA)"

clean:
	@echo "Cleaning `basename $(CURDIR)`"
	@rm -f $(TARGET) $(OBJS) $(CLEAN) "$(IPA).ipa" *.tmp
	@rm -rf "$(IPA).app"

#
# Dependencies
#
ifneq "$(MAKECMDGOALS)" "clean"
 	-include $(DEPEND)
endif
